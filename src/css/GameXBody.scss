/**
 *------
 * BGA framework: © Gregory Isabelli <gisabelli@boardgamearena.com> & Emmanuel Colin <ecolin@boardgamearena.com>
 * testlav implementation : © Alena Laskavaia <laskava@gmail.com>
 *
 * This code has been produced on the BGA studio platform for use on http://boardgamearena.com.
 * See http://en.boardgamearena.com/#!doc/Studio for more information.
 * -----
 *
 * GameBody.scss
 *
 */
/* the other files */
@import "GameBasics";
@import "GameTokens";
@import "Card";
@import "Map";
@import "MiniBoard";


#ebd-body {
  --stan-width:12em; /* 25vh */
  --stan-height: calc(var(--stan-width)*0.3);
}


#thething {
  display: flex;
  flex-direction: column;
}

#main_area {
  display: flex;
  position: relative;
  flex-wrap: wrap;
  flex-direction: row;

}

#decks_area > * {
  display: inline-block;
}



.display_main  {
  display: flex;
  flex-direction: column;
  justify-content: center;
  border: 1px solid black;
  background-color: darkgray;
  width: fit-content;
  height: fit-content;
  padding: calc(var(--stan-width) * 0.07);

}
#decks_area {
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  align-items: center;
  height: 30%;
}

.tracker::after, .param::after  {
  content: attr(data-state);
}

/** Temp markers */
#params {
 width: fit-content;
}
#params > *{
  display: inline-block;
  margin-right: 20px;
}


.tile {
  width: 40px;
  height: 40px;
  border-radius: 50%;
  outline: 1px solid gray;
}

.tile_3 {
  background-color: blue;
}


/* standard projects */
#display_main .card {
  width: var(--stan-width);
  height: var(--stan-height);
  /* border: black solid 1px; */
  border-radius: 5%;
  box-shadow: 2px 2px 3px 1px #00000080;
  font-size: calc(var(--stan-width) * 0.07);
  margin-bottom:calc(var(--stan-height) * 0.1); ;
}
.milestone, .award  {
  width: var(--stan-width);
  height: var(--stan-height);
  outline: 1px dashed green;
}
.token.marker {
  width: 10px;
  height: 10px;
  outline: 1px dashed black;
}
.card .resource {
  width: 10px;
  height: 10px;
  outline: 1px dashed black;
}

#main_area .card .token_descr{
  display: none;
}

#main_area .card .token_rules {
  top:55%;
}
#main_area .card .token_cost {
  top: 20%;
}

/* decks */
#decks_area .card {
  width: calc(var(--stan-width) * 0.4);
  height: calc(var(--stan-width) * 0.5);
  /* border: black solid 1px; */
  border-radius: 5%;
  box-shadow: 2px 2px 3px 1px #00000080;
  font-size: calc(var(--stan-width) * 0.07);
  margin-bottom:calc(var(--stan-height) * 0.1); ;
}
#decks_area .milestone,#decks_area .award {
  width: calc(var(--stan-width) * 0.4);
  height: calc(var(--stan-width) * 0.5);
}

#deck_main{
  background-image: url("img/resources.png");
  background-size: 1000% 200%;
  background-position: 0 -100%;
 background-color: grey;
}
#discard_main{
  background-color: ghostwhite;
}

.carddeck .counter {
  position: absolute;
  top: 0;
  left: 0;
  border: 1px solid white;
  background: black;
  color: white;
  width: calc(var(--stan-width) * 0.15);
  height: calc(var(--stan-width) * 0.15);
  display: flex;
  justify-content: center;
  align-items: center;
  border-radius: 50%;
  padding: 1%;
}



/* */
#main_board {
  display: flex;
  flex-direction: column;
}

#map_top{
  padding:1%;

}
#map_right{
  padding:1%;
}
#map_left{
  padding:1%;
  display:flex;
  flex-direction: column;
  justify-content: space-around;
}

#temperature_map {
  position: relative;
  height: 100%;
  width: 2em;
  border: 1px solid red;
  background: linear-gradient(180deg, rgba(255,0,8,1) 0%, rgba(47,0,255,1) 75%, rgba(0,255,252,1) 100%);
}

.temperature_scale{
  position: absolute;
  top:0;
  left:0;
  width:100%;
  height: 100%;
}

.temperature_scale_item{
  position: absolute;
  height: 4%;
  width: 100%;
  justify-content: center;
  display: flex;
  align-items: center;

}
.temperature_scale_item::after{
  content: attr(data-val);
}

#temperature_map #tracker_t {
  position: absolute;
  height: 4%;
  width: 100%;
  box-shadow: #fff 0px 0px 0px 3px;
}
#temperature_map #tracker_t::after{
  content: revert;
}


@for $val from -30 through 8{
  @if $val % 2 ==0 {
     $g:$val+30;
    .temperature_scale_item[data-val="#{$val}"] {  bottom: $g*2.5%; }
    #temperature_map #tracker_t[data-state="#{$val}"] {  bottom: $g*2.5%; }
  }
}

#oxygen_map {
  position: relative;
  width : 100%;
  height: 2em;
  border: 1px solid red;
  background: linear-gradient(90deg, rgb(180, 105, 0) 0%, rgb(238, 223, 120) 75%, rgba(0,255,252,1) 100%);
}

.oxygen_scale{
  position: absolute;
  top:0;
  left:0;
  width:100%;
  height: 100%;
}

.oxygen_scale_item{
  position: absolute;
  width: 4%;
  height: 100%;
  justify-content: center;
  display: flex;
  align-items: center;

}
.oxygen_scale_item::after{
  content: attr(data-val);
}

#oxygen_map #tracker_o {
  position: absolute;
  width: 4%;
  height: 100%;
  box-shadow: #fff 0px 0px 0px 3px;
}

#oxygen_map #tracker_o::after{
  content: revert;
}


@for $val from -0 through 14{
    .oxygen_scale_item[data-val="#{$val}"] {  left: $val*6.8%; }
    #oxygen_map #tracker_o[data-state="#{$val}"] {  left: $val*6.8%; }

}

